name: ci

on: [ push, pull_request ]

jobs:
 lint:
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
    uses: actions/checkout@v2
  - name: Set up Python 3.9
    uses: actions/setup-python@v2
    with:
     python-version: 3.9
  - run: pip install flake8
  - run: pip install mypy
  - run: pip install requests
  - run: pip install types-mock
  - run: pip install types-requests
  - run: flake8 bin/chroma-feedback chroma_feedback tests
  - run: mypy bin/chroma-feedback chroma_feedback tests
 test:
  runs-on: ubuntu-latest
  strategy:
   matrix:
    python-version: [ '3.8', '3.9', '3.10' ]
  steps:
  - name: Checkout
    uses: actions/checkout@v2
  - name: Set up Python ${{ matrix.python-version }}
    uses: actions/setup-python@v3
    with:
     python-version: ${{ matrix.python-version }}
  - run: pip install mock
  - run: pip install pyqt5
  - run: pip install pyqt5-stubs
  - run: pip install pytest
  - run: pip install pytest-mock
  - run: pip install requests
  - run: pytest tests
    env:
     APPVEYOR_TOKEN: ${{ secrets.APPVEYOR_TOKEN }}
     ATLASSIAN_BITBUCKET_USERNAME: ${{ secrets.ATLASSIAN_BITBUCKET_USERNAME }}
     ATLASSIAN_BITBUCKET_PASSWORD: ${{ secrets.ATLASSIAN_BITBUCKET_PASSWORD }}
     CIRCLE_TOKEN: ${{ secrets.CIRCLE_TOKEN }}
     CLOUDBEES_CODESHIP_USERNAME: ${{ secrets.CLOUDBEES_CODESHIP_USERNAME }}
     CLOUDBEES_CODESHIP_PASSWORD: ${{ secrets.CLOUDBEES_CODESHIP_PASSWORD }}
     GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
     HEROKU_TOKEN: ${{ secrets.HEROKU_TOKEN }}
     JETBRAINS_TEAMCITY_TOKEN: ${{ secrets.JETBRAINS_TEAMCITY_TOKEN }}
     MICROSOFT_GITHUB_TOKEN: ${{ secrets.MICROSOFT_GITHUB_TOKEN }}
     NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
     TRAVIS_TOKEN: ${{ secrets.TRAVIS_TOKEN }}
     VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
 report:
  needs: test
  runs-on: ubuntu-latest
  steps:
  - name: Checkout
    uses: actions/checkout@v2
  - name: Set up Python 3.9
    uses: actions/setup-python@v3
    with:
     python-version: 3.9
  - run: pip install coveralls
  - run: pip install mock
  - run: pip install pyqt5
  - run: pip install pytest
  - run: pip install pytest-cov
  - run: pip install pytest-mock
  - run: pip install requests
  - run: pytest tests --cov=chroma_feedback
    env:
     APPVEYOR_TOKEN: ${{ secrets.APPVEYOR_TOKEN }}
     ATLASSIAN_BITBUCKET_USERNAME: ${{ secrets.ATLASSIAN_BITBUCKET_USERNAME }}
     ATLASSIAN_BITBUCKET_PASSWORD: ${{ secrets.ATLASSIAN_BITBUCKET_PASSWORD }}
     CIRCLE_TOKEN: ${{ secrets.CIRCLE_TOKEN }}
     CLOUDBEES_CODESHIP_USERNAME: ${{ secrets.CLOUDBEES_CODESHIP_USERNAME }}
     CLOUDBEES_CODESHIP_PASSWORD: ${{ secrets.CLOUDBEES_CODESHIP_PASSWORD }}
     GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
     HEROKU_TOKEN: ${{ secrets.HEROKU_TOKEN }}
     JETBRAINS_TEAMCITY_TOKEN: ${{ secrets.JETBRAINS_TEAMCITY_TOKEN }}
     MICROSOFT_GITHUB_TOKEN: ${{ secrets.MICROSOFT_GITHUB_TOKEN }}
     NETLIFY_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
     TRAVIS_TOKEN: ${{ secrets.TRAVIS_TOKEN }}
     VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  - run: coveralls --service=github
    env:
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
